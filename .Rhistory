Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist)
library(tidyr)
gini.source.decomp.comp(cars, speed, .by = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
return(sources)
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
if(!is.null(.wgt))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
if(!is.null(.wgt))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = speed)
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = "speed")
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
if(!is.null({{.wgt}}))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = "speed")
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = speed)
dplyr::pull(cars, NULL)
dplyr::pull(cars)
cars
dplyr::pull(cars, )
dplyr::pull(cars, NULL)
pull_ <- function(df, v) dplyr::pull(df, {{v}})
pull_(cars, speed)
pull_(cars, NULL)
pull_ <- function(df, v) {{v}}
pull_(cars, speed)
dplyr::pull(cars, 1)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(quote(.wgt))
if(!is.null({{.wgt}}))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = speed)
gini.source.decomp.comp(cars, speed, .by = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(quote(env$.wgt))
if(!is.null({{.wgt}}))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(quote(!!.wgt))
if(!is.null({{.wgt}}))
sources$W  <- dplyr::pull(.data, {{.wgt}})
else
sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist)
quote(cds,ko)
quote(cdsko)
enquote(cdsko)
enquote("cdsko")
expression(cdsko)
expr(cdsko)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}}, {{.wgt}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}, -{{.wgt}}) %>%
rowSums()
# if(!is.null({{.wgt}}))
#   sources$W  <- dplyr::pull(.data, {{.wgt}})
# else
#   sources$W <- 1
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .by = dist)
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = dist)
stats::weighted.mean(1:10)
stats::weighted.mean(1:10, w = NULL)
stats::weighted.mean(1:10, w = NULL)
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp(cars, speed)
dplyr::select(cars, NULL)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}}, {{.wgt}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}, -{{.wgt}}) %>%
rowSums()
return({{.wgt}} %in% names(sources))
# if(!is.null({{.wgt}}))
#   sources$W  <- dplyr::pull(.data, {{.wgt}})
# else
#   sources$W <- 1
# return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
dplyr::select(cars, NULL)
dplyr::select(cars, NULL) %>% ncol()
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}}, {{.wgt}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}, -{{.wgt}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}) %>% ncol)
# if(!is.null({{.wgt}}))
#   sources$W  <- dplyr::pull(.data, {{.wgt}})
# else
#   sources$W <- 1
# return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}}, W = {{.wgt}})
return(sources)
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}, -{{.wgt}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}) %>% ncol)
# if(!is.null({{.wgt}}))
#   sources$W  <- dplyr::pull(.data, {{.wgt}})
# else
#   sources$W <- 1
# return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}) == 0)
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(ncol(dplyr::select(sources, {{.wgt}})) == 0)
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(ncol(dplyr::select(sources, {{.wgt}})))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp(cars, speed, .wgt = "")
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
return(dplyr::select(sources, {{.wgt}}))
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = "")
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
return(sources)
return(dplyr::select(sources, {{.wgt}}))
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
# return(sources)
return(dplyr::select(sources, {{.wgt}}))
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
cars
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}}, {{.wgt}})
return(sources)
return(dplyr::select(sources, {{.wgt}}))
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
return(dplyr::select(.data, {{.wgt}}))
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
return(dplyr::select(sources, {{.wgt}}))
if(dplyr::select(sources, {{.wgt}}) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed)
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp <- function(.data, ..., .by = NULL, .wgt = NULL) {
sources <- dplyr::select(.data, ..., {{.by}})
sources$Total_Income <- sources %>%
dplyr::select(-{{.by}}) %>%
rowSums()
# return(ncol(dplyr::select(sources, {{.wgt}})))
if(ncol(dplyr::select(.data, {{.wgt}})) == 0)
sources$W <- 1
else
sources$W  <- dplyr::pull(.data, {{.wgt}})
return(sources)
decomp_components <- sources %>%
pivot_longer(cols = - c(Total_Income, W, {{.by}}), names_to = "source_revenu", values_to = "valeur_revenu") %>%
dplyr::group_by(dplyr::across({{.by}}), source_revenu) %>%
dplyr::summarise(Share = stats::weighted.mean(valeur_revenu, w = W) / weighted.mean(Total_Income, w = W),
Gini = gini_wtd_ord(valeur_revenu, weights = W),
Gini_corr = gini_corr(valeur_revenu, Total_Income, weights = W),
.groups = "drop")
return(decomp_components)
}
gini.source.decomp.comp(cars, speed, .wgt = dist)
gini.source.decomp.comp(cars, speed, .by = dist, .wgt = dist)
dplyr::select(cars)
is.null(dplyr::select(cars))
ncol(dplyr::select(cars))
library(GiniDecompLY)
usethis::use_readme_md()
library(GiniDecompLY)
View(gini_decomp_source())
View(gini_decomp_source)
View(gini.source.decomp.comp)
library(GiniDecompLY)
cars
cars %>% mutate(x = 0)
library(tidyverse)
cars %>% mutate(x = 0) %>% gini_decomp_source(everything())
library(GiniDecompLY)
cars %>% mutate(x = 0) %>% gini_decomp_source(everything())
cars %>% mutate(x = 0) %>% gini_income_elasticity(everything())
cars %>% mutate(x = 0) %>% social_welfare_impact(everything())
library(GiniDecompLY)
cars %>% mutate(x = 0) %>% social_welfare_impact(everything())
